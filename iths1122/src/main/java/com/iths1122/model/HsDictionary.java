package com.iths1122.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

import javax.persistence.Table;

/**
 * Model class of 字典表.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table(name = "hs_dictionary")
public class HsDictionary implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 类型编码. */
	@Id
	private Integer dictionaryId;

	/** 类型名称. */
	private String type;

	/** 备注. */
	private String remark;

	/** The set of hs_leave_word. */
	@OneToMany(cascade = CascadeType.DETACH , fetch = FetchType.LAZY , mappedBy = "hsDictionary")
	private Set<HsLeaveWord> hsLeaveWordSet;

	/** The set of hs_share. */
	@OneToMany(cascade = CascadeType.DETACH , fetch = FetchType.LAZY , mappedBy = "hsDictionary")
	private Set<HsShare> hsShareSet;

	/**
	 * Constructor.
	 */
	public HsDictionary() {
		this.hsLeaveWordSet = new HashSet<HsLeaveWord>();
		this.hsShareSet = new HashSet<HsShare>();
	}

	/**
	 * Set the 类型编码.
	 * 
	 * @param dictionaryId
	 *            类型编码
	 */
	public void setDictionaryId(Integer dictionaryId) {
		this.dictionaryId = dictionaryId;
	}

	/**
	 * Get the 类型编码.
	 * 
	 * @return 类型编码
	 */
	public Integer getDictionaryId() {
		return this.dictionaryId;
	}

	/**
	 * Set the 类型名称.
	 * 
	 * @param type
	 *            类型名称
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * Get the 类型名称.
	 * 
	 * @return 类型名称
	 */
	public String getType() {
		return this.type;
	}

	/**
	 * Set the 备注.
	 * 
	 * @param remark
	 *            备注
	 */
	public void setRemark(String remark) {
		this.remark = remark;
	}

	/**
	 * Get the 备注.
	 * 
	 * @return 备注
	 */
	public String getRemark() {
		return this.remark;
	}

	/**
	 * Set the set of the hs_leave_word.
	 * 
	 * @param hsLeaveWordSet
	 *            The set of hs_leave_word
	 */
	public void setHsLeaveWordSet(Set<HsLeaveWord> hsLeaveWordSet) {
		this.hsLeaveWordSet = hsLeaveWordSet;
	}

	/**
	 * Add the hs_leave_word.
	 * 
	 * @param hsLeaveWord
	 *            hs_leave_word
	 */
	public void addHsLeaveWord(HsLeaveWord hsLeaveWord) {
		this.hsLeaveWordSet.add(hsLeaveWord);
	}

	/**
	 * Get the set of the hs_leave_word.
	 * 
	 * @return The set of hs_leave_word
	 */
	public Set<HsLeaveWord> getHsLeaveWordSet() {
		return this.hsLeaveWordSet;
	}

	/**
	 * Set the set of the hs_share.
	 * 
	 * @param hsShareSet
	 *            The set of hs_share
	 */
	public void setHsShareSet(Set<HsShare> hsShareSet) {
		this.hsShareSet = hsShareSet;
	}

	/**
	 * Add the hs_share.
	 * 
	 * @param hsShare
	 *            hs_share
	 */
	public void addHsShare(HsShare hsShare) {
		this.hsShareSet.add(hsShare);
	}

	/**
	 * Get the set of the hs_share.
	 * 
	 * @return The set of hs_share
	 */
	public Set<HsShare> getHsShareSet() {
		return this.hsShareSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((dictionaryId == null) ? 0 : dictionaryId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		HsDictionary other = (HsDictionary) obj;
		if (dictionaryId == null) {
			if (other.dictionaryId != null) {
				return false;
			}
		} else if (!dictionaryId.equals(other.dictionaryId)) {
			return false;
		}
		return true;
	}

}
